/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Millionaire;

import static Millionaire.DoYouWantToBeAMillionaire.getQuestion;
import static Millionaire.DoYouWantToBeAMillionaire.getlifeline1Used;
import static Millionaire.DoYouWantToBeAMillionaire.getlifeline2Used;
import static Millionaire.DoYouWantToBeAMillionaire.lifeLine;
import static Millionaire.DoYouWantToBeAMillionaire.randomQuestion;
import static Millionaire.DoYouWantToBeAMillionaire.setQuestionNumber;
import static Millionaire.DoYouWantToBeAMillionaire.setlifeline1Used;
import static Millionaire.DoYouWantToBeAMillionaire.setlifeline2Used;
import java.awt.Color;
import javax.swing.JOptionPane;


/**
 *
 * @author ocdsb
 */
public final class QuestionScreen extends javax.swing.JFrame {

    public static int btnAHighlight = 0;
    public static int btnBHighlight = 0;
    public static int btnCHighlight = 0;
    public static int btnDHighlight = 0;
    public static boolean btnClicked;
    public static boolean answerCorrect;
    public static int question;
        
    public QuestionScreen() {
        initComponents();
        btnClicked = false;  
        btnBHighlight = 0;
        btnAHighlight = 0;
        btnBHighlight = 0;
        btnCHighlight = 0;
        btnDHighlight = 0;
        nextButton.setVisible(false);
        DoYouWantToBeAMillionaire.timerActive = true;
        timer.timer = 30;
        Thread t1 = new Thread(new timer());
        t1.start();
        
        System.out.println(DoYouWantToBeAMillionaire.questionsMain);
        question = randomQuestion();
        
        ButtonA.setText(DoYouWantToBeAMillionaire.questionsMain.get(question).get(1));
        ButtonB.setText(DoYouWantToBeAMillionaire.questionsMain.get(question).get(2));
        ButtonC.setText(DoYouWantToBeAMillionaire.questionsMain.get(question).get(3));
        ButtonD.setText(DoYouWantToBeAMillionaire.questionsMain.get(question).get(4));
        jLabel6.setText(DoYouWantToBeAMillionaire.questionsMain.get(question).get(0));
        
        
        //sets colour
        ButtonA.setForeground(Color.black);
        ButtonB.setForeground(Color.black);
        ButtonC.setForeground(Color.black);
        ButtonD.setForeground(Color.black);
        
        Color ButtonMouseExited= new Color(78,73,231); //to reset the button highlight incase lifeline was previosuly used or when new window opens
            
        setBtnAColour(ButtonMouseExited);
        setBtnBColour(ButtonMouseExited);
        setBtnCColour(ButtonMouseExited);
        setBtnDColour(ButtonMouseExited); 
        setLifeline2Colour(ButtonMouseExited);
        setLifeline1Colour(ButtonMouseExited);
        
    }

    public static void timer_end(){
        if (DoYouWantToBeAMillionaire.timerActive == false){
            nextButton.setVisible(true);
        }
    }
    
    public void verifyAnswer(String btnID){
        
        Color myColour = new Color(0, 0, 0);

        if (DoYouWantToBeAMillionaire.questionsMain.get(question).get(5).equals(btnID)) {
            answerCorrect = true;
            if (btnID.equals("A")) {
                btnAHighlight = 3;
                setBtnAColour(myColour);
            } else if (btnID.equals("B")) {
                btnBHighlight = 3;
                setBtnBColour(myColour);
            } else if (btnID.equals("C")) {
                btnCHighlight = 3;
                setBtnCColour(myColour);
            } else {
                btnDHighlight = 3;
                setBtnDColour(myColour);
            }
        }
        else{
            answerCorrect = false;
            if (btnID.equals("A")) {
                    btnAHighlight = 4;
                    setBtnAColour(myColour);
                } else if (btnID.equals("B")) {
                    btnBHighlight = 4;
                    setBtnBColour(myColour);
                } else if (btnID.equals("C")) {
                    btnCHighlight = 4;
                    setBtnCColour(myColour);
                } else {
                    btnDHighlight = 4;
                    setBtnDColour(myColour);
                }
            }
    }

        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        Lifeline1 = new javax.swing.JButton();
        Lifeline2 = new javax.swing.JButton();
        ButtonB = new javax.swing.JButton();
        ButtonA = new javax.swing.JButton();
        ButtonD = new javax.swing.JButton();
        ButtonC = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        TimeLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(933, 536));
        jPanel2.setName(""); // NOI18N
        jPanel2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanel2PropertyChange(evt);
            }
        });
        jPanel2.setLayout(null);

        Lifeline1.setBackground(new java.awt.Color(78, 73, 231));
        Lifeline1.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 14)); // NOI18N
        Lifeline1.setForeground(new java.awt.Color(255, 255, 255));
        Lifeline1.setText("50:50");
        Lifeline1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Lifeline1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Lifeline1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Lifeline1MouseExited(evt);
            }
        });
        Lifeline1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Lifeline1ActionPerformed(evt);
            }
        });
        jPanel2.add(Lifeline1);
        Lifeline1.setBounds(10, 10, 100, 42);

        Lifeline2.setBackground(new java.awt.Color(78, 73, 231));
        Lifeline2.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 14)); // NOI18N
        Lifeline2.setForeground(new java.awt.Color(255, 255, 255));
        Lifeline2.setText("50%");
        Lifeline2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Lifeline2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Lifeline2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Lifeline2MouseExited(evt);
            }
        });
        Lifeline2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Lifeline2ActionPerformed(evt);
            }
        });
        jPanel2.add(Lifeline2);
        Lifeline2.setBounds(810, 10, 100, 41);

        ButtonB.setBackground(new java.awt.Color(78, 73, 231));
        ButtonB.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 13)); // NOI18N
        ButtonB.setForeground(new java.awt.Color(255, 255, 255));
        ButtonB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        ButtonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonBMouseExited(evt);
            }
        });
        ButtonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBActionPerformed(evt);
            }
        });
        jPanel2.add(ButtonB);
        ButtonB.setBounds(510, 380, 250, 77);

        ButtonA.setBackground(new java.awt.Color(78, 73, 231));
        ButtonA.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 13)); // NOI18N
        ButtonA.setForeground(new java.awt.Color(255, 255, 255));
        ButtonA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        ButtonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonAMouseExited(evt);
            }
        });
        ButtonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAActionPerformed(evt);
            }
        });
        jPanel2.add(ButtonA);
        ButtonA.setBounds(170, 380, 250, 77);

        ButtonD.setBackground(new java.awt.Color(78, 73, 231));
        ButtonD.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 13)); // NOI18N
        ButtonD.setForeground(new java.awt.Color(255, 255, 255));
        ButtonD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        ButtonD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonDMouseExited(evt);
            }
        });
        ButtonD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDActionPerformed(evt);
            }
        });
        jPanel2.add(ButtonD);
        ButtonD.setBounds(510, 510, 250, 82);

        ButtonC.setBackground(new java.awt.Color(78, 73, 231));
        ButtonC.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 13)); // NOI18N
        ButtonC.setForeground(new java.awt.Color(255, 255, 255));
        ButtonC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        ButtonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ButtonCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ButtonCMouseExited(evt);
            }
        });
        ButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCActionPerformed(evt);
            }
        });
        jPanel2.add(ButtonC);
        ButtonC.setBounds(170, 510, 250, 82);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel6);
        jLabel6.setBounds(190, 290, 550, 60);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/questionBox.png"))); // NOI18N
        jPanel2.add(jLabel3);
        jLabel3.setBounds(130, 260, 690, 120);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/logo.png"))); // NOI18N
        jPanel2.add(jLabel4);
        jLabel4.setBounds(330, 10, 250, 250);

        nextButton.setBackground(new java.awt.Color(51, 204, 255));
        nextButton.setForeground(new java.awt.Color(51, 204, 255));
        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/NextBtn2.png"))); // NOI18N
        nextButton.setBorder(null);
        nextButton.setBorderPainted(false);
        nextButton.setContentAreaFilled(false);
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextButtonMouseExited(evt);
            }
        });
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        jPanel2.add(nextButton);
        nextButton.setBounds(860, 560, 50, 50);

        TimeLabel.setFont(new java.awt.Font("Kartika", 1, 24)); // NOI18N
        jPanel2.add(TimeLabel);
        TimeLabel.setBounds(450, 460, 30, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/timerCircle.png"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(420, 430, 110, 100);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 933, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCActionPerformed
        if (btnCHighlight != 1 && btnCHighlight != 2 && !btnClicked) {
            verifyAnswer("C");
            btnClicked = true;
            nextButton.setVisible(true);

            DoYouWantToBeAMillionaire.timerActive = false;
        }
        else if (btnCHighlight == 2 && !btnClicked){
            verifyAnswer("C");
            btnClicked = true;   
            nextButton.setVisible(true);

            DoYouWantToBeAMillionaire.timerActive = false;
        }
    }//GEN-LAST:event_ButtonCActionPerformed

    private void ButtonDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDActionPerformed
        if((btnDHighlight != 1) && btnDHighlight != 2 && !btnClicked){
            verifyAnswer("D");
            btnClicked = true;
            nextButton.setVisible(true);

            DoYouWantToBeAMillionaire.timerActive = false;
        } 
        else if (btnDHighlight == 2 && !btnClicked){
            verifyAnswer("D");
            btnClicked = true;
            nextButton.setVisible(true);

            DoYouWantToBeAMillionaire.timerActive = false;
        }
    }//GEN-LAST:event_ButtonDActionPerformed

    private void ButtonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAActionPerformed
        if(btnAHighlight != 1 && btnAHighlight != 2 && !btnClicked){
            verifyAnswer("A");
            btnClicked = true;
            nextButton.setVisible(true);

            DoYouWantToBeAMillionaire.timerActive = false;
        } 
        else if (btnAHighlight == 2 && !btnClicked){
            verifyAnswer("A");
            btnClicked = true;
            nextButton.setVisible(true);

            DoYouWantToBeAMillionaire.timerActive = false;
        }
    }//GEN-LAST:event_ButtonAActionPerformed

    private void ButtonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBActionPerformed
        if(btnBHighlight != 1 && btnBHighlight != 2 && !btnClicked){
            verifyAnswer("B");
            btnClicked = true;
            nextButton.setVisible(true);
            DoYouWantToBeAMillionaire.timerActive = false;
        }
            else if (btnBHighlight == 2 && !btnClicked){
            verifyAnswer("B");
            btnClicked = true;
            nextButton.setVisible(true);
            DoYouWantToBeAMillionaire.timerActive = false;
        }
    }//GEN-LAST:event_ButtonBActionPerformed

    private void Lifeline1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Lifeline1ActionPerformed
       
        if(!btnClicked){
            if (getlifeline1Used()){
                JOptionPane.showMessageDialog(null, "You already used this!");
            }
            else{

                lifeLine(getQuestion(), 1);     

                Color ButtonMouseExited= new Color(78,73,231); //this line will only have an affect if the button was not chosen to be highlighted


                setBtnAColour(ButtonMouseExited);
                setBtnBColour(ButtonMouseExited);
                setBtnCColour(ButtonMouseExited);
                setBtnDColour(ButtonMouseExited);            

                setlifeline1Used();


            }
        }
        
        
        
    }//GEN-LAST:event_Lifeline1ActionPerformed

    private void Lifeline2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Lifeline2ActionPerformed
        if(!btnClicked){
            if (getlifeline2Used()){
                JOptionPane.showMessageDialog(null, "You already used this!");
            }
            else{

                lifeLine(getQuestion(), 2);     

                Color ButtonMouseExited= new Color(78,73,231); //this line will only have an affect if the button was not chosen to be highlighted


                setBtnAColour(ButtonMouseExited);
                setBtnBColour(ButtonMouseExited);
                setBtnCColour(ButtonMouseExited);
                setBtnDColour(ButtonMouseExited);            

                setlifeline2Used();          



            }
        }
        
    }//GEN-LAST:event_Lifeline2ActionPerformed

    private void ButtonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAMouseEntered
        Color ButtonAMouseEntered = new Color(255, 255, 255);
        setBtnAColour(ButtonAMouseEntered);
    }//GEN-LAST:event_ButtonAMouseEntered

    private void ButtonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAMouseExited
        Color ButtonAMouseExited = new Color(78,73,231);
        setBtnAColour(ButtonAMouseExited);
    }//GEN-LAST:event_ButtonAMouseExited

    private void ButtonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonBMouseEntered
        Color ButtonBMouseEntered = new Color(255, 255, 255);
        setBtnBColour(ButtonBMouseEntered);
    }//GEN-LAST:event_ButtonBMouseEntered

    private void ButtonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonBMouseExited
        Color ButtonBMouseExited = new Color(78,73,231);
        setBtnBColour(ButtonBMouseExited);
    }//GEN-LAST:event_ButtonBMouseExited

    private void ButtonCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCMouseEntered
        Color ButtonCMouseEntered = new Color(255, 255, 255);
        setBtnCColour(ButtonCMouseEntered);
    }//GEN-LAST:event_ButtonCMouseEntered

    private void ButtonCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCMouseExited
        Color ButtonCMouseExited = new Color(78,73,231);
        setBtnCColour(ButtonCMouseExited);
    }//GEN-LAST:event_ButtonCMouseExited

    private void ButtonDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonDMouseEntered
        Color ButtonDMouseEntered = new Color(255, 255, 255);
        setBtnDColour(ButtonDMouseEntered);
    }//GEN-LAST:event_ButtonDMouseEntered

    private void ButtonDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonDMouseExited
        Color ButtonDMouseExited = new Color(78,73,231);
        setBtnDColour(ButtonDMouseExited);
    }//GEN-LAST:event_ButtonDMouseExited

    private void Lifeline1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lifeline1MouseEntered
        Color Lifeline1MouseEntered = new Color(153, 255, 255);
        setLifeline1Colour(Lifeline1MouseEntered);
          
    }//GEN-LAST:event_Lifeline1MouseEntered

    private void Lifeline1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lifeline1MouseExited
        Color Lifeline1MouseExited = new Color(78,73,231);
        setLifeline1Colour(Lifeline1MouseExited);
    }//GEN-LAST:event_Lifeline1MouseExited

    private void Lifeline2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lifeline2MouseEntered
        Color Lifeline2MouseEntered = new Color(153, 255, 255);
        setLifeline2Colour(Lifeline2MouseEntered);
    }//GEN-LAST:event_Lifeline2MouseEntered

    private void Lifeline2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lifeline2MouseExited
        Color Lifeline2MouseExited = new Color(78,73,231);
        setLifeline2Colour(Lifeline2MouseExited);
    }//GEN-LAST:event_Lifeline2MouseExited

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        
        if(answerCorrect){
            setQuestionNumber(); //increase question number by 1 every time this screen opens
            DoYouWantToBeAMillionaire.questionsMain.remove(question);
            scoreScreen ScoreWindow = new scoreScreen();
            ScoreWindow.setVisible(true);
            this.dispose();
        }
        else{
            LoseScreen LoseWindow = new LoseScreen();
            LoseWindow.setVisible(true);
            this.dispose();
        }
   
    }//GEN-LAST:event_nextButtonActionPerformed

    private void nextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseEntered
        nextButton.setContentAreaFilled(true);
        nextButton.setBackground(Color.GREEN);
    }//GEN-LAST:event_nextButtonMouseEntered

    private void nextButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseExited
 
        nextButton.setContentAreaFilled(false);
    }//GEN-LAST:event_nextButtonMouseExited

    private void jPanel2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanel2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2PropertyChange
      
    public void setBtnAColour(Color myColour){
        
        if(!btnClicked){
            if(btnAHighlight == 1){
                ButtonA.setBackground(Color.BLACK);
            }
            else if (btnAHighlight == 2){
                ButtonA.setBackground(Color.ORANGE);
            }
            else if (btnAHighlight == 3){
                ButtonA.setBackground(Color.GREEN);
            }
            else if (btnAHighlight == 4){
                ButtonA.setBackground(Color.RED);
            }
            else {
                ButtonA.setBackground(myColour);
            }
        }

    }
    
    public void setBtnBColour(Color myColour){
        
        if(!btnClicked){
            if(btnBHighlight == 1){ //if lifeline 1 removes it
                ButtonB.setBackground(Color.BLACK);
            }
            else if (btnBHighlight == 2){ //if lifeline 2 selects it
                ButtonB.setBackground(Color.ORANGE);
            }
            else if (btnBHighlight == 3){ //if after clicking, answer is correct
                ButtonB.setBackground(Color.GREEN);
            }
            else if (btnBHighlight == 4){ //if after clicking, answer is incorrect
                ButtonB.setBackground(Color.RED);
            }
            else {
                ButtonB.setBackground(myColour);
            }
        }
        
        
    }
    
    public void setBtnCColour(Color myColour){
        
        if(!btnClicked){
            if(btnCHighlight == 1){
                ButtonC.setBackground(Color.BLACK);
            }
            else if (btnCHighlight == 2){
                ButtonC.setBackground(Color.ORANGE);
            }
            else if (btnCHighlight == 3){
                ButtonC.setBackground(Color.GREEN);
            }
            else if (btnCHighlight == 4){
                ButtonC.setBackground(Color.RED);
            }
            else {
                ButtonC.setBackground(myColour);
            }
        }
        
        
    }
    
    public void setBtnDColour(Color myColour){
        if(!btnClicked){
            if(btnDHighlight == 1){
                ButtonD.setBackground(Color.BLACK);
            }
            else if (btnDHighlight == 2){
                ButtonD.setBackground(Color.ORANGE);
            }
            else if (btnDHighlight == 3){
                ButtonD.setBackground(Color.GREEN);
            }
            else if (btnDHighlight == 4){
                ButtonD.setBackground(Color.RED);
            }
            else {
                ButtonD.setBackground(myColour);
            }
        }
        
        
    }
    
    public void setLifeline2Colour(Color myColour){
        
        if(!btnClicked){      
            if (getlifeline2Used()){
                Lifeline2.setBackground(Color.BLACK);
            }
            else{
                Lifeline2.setBackground(myColour);
            }
        }

    }
    
    public void setLifeline1Colour(Color myColour){
        
        if(!btnClicked){
            if (getlifeline1Used()){
                Lifeline1.setBackground(Color.BLACK);
            }
            else{
                Lifeline1.setBackground(myColour);
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new QuestionScreen().setVisible(true);    
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton ButtonA;
    public static javax.swing.JButton ButtonB;
    public static javax.swing.JButton ButtonC;
    public static javax.swing.JButton ButtonD;
    private javax.swing.JButton Lifeline1;
    private javax.swing.JButton Lifeline2;
    public static javax.swing.JLabel TimeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JButton nextButton;
    // End of variables declaration//GEN-END:variables
}
